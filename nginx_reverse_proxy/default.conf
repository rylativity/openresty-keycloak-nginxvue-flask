server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name localhost;
	return 301 https://$host$request_uri;
}

server {
    listen              443 ssl default_server;
    ssl_certificate     /run/secrets/ssl_cert;
    ssl_certificate_key /run/secrets/ssl_key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    server_name localhost;

    proxy_cache_bypass  $http_upgrade;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        "upgrade";
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host  $host;
    proxy_set_header X-Forwarded-Port  $server_port;

    expires           0;
    add_header        Cache-Control private;

    large_client_header_buffers 4 64k;

    root   /usr/share/nginx/html;
    index  index.html index.htm;

    resolver 127.0.0.11;
    set $session_name nginx_session;

    location = / {
      return 301 https://$host/home;
    }

    location /home {
      resolver 127.0.0.11 ipv6=off valid=10s;
      set $vue vue-app;
      proxy_pass      http://$vue:80$request_uri;
    }

    location /api {
      resolver 127.0.0.11 ipv6=off valid=10s;
      set $fastapi_backend fastapi-app;
      proxy_pass      http://$fastapi_backend:8000$request_uri;
    }

    location /auth {
      resolver 127.0.0.11 valid=10s;
      set $keycloak_backend keycloak;
      proxy_pass      http://$keycloak_backend:8080$request_uri;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

